{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwin Jegatheesan\\\\Gift-app\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  var loginUserName;\n  var loginPassword;\n  const [message, setMessage] = useState('');\n\n  const doLogin = async (event) => {\n    event.preventDefault();\n    var obj = {\n      login: loginUserName.value,\n      password: loginPassword.value\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch('http://localhost:3000/api/login', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.firstName === \"\") {\n        setMessage('Username/Password combination incorrect');\n      } else if (!res.Validated) {\n        setMessage('Check your email to verify account');\n      } else {\n        var user = {\n          email: res.Email,\n          firstName: res.firstName,\n          lastName: res.lastName,\n          id: res.id,\n          userName: res.UserName\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        window.location.href = '/home';\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"loginform\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"loginlabel\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"login-input\",\n          type: \"name\",\n          placeholder: \"username\",\n          ref: c => loginUserName = c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"login-input\",\n          type: \"password\",\n          placeholder: \"password\",\n          ref: c => loginPassword = c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: doLogin,\n        block: true,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"loginResult\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/ForgotPassword\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/SignUp\",\n          className: \"link\",\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"tYaLAwkLc77MHDU2+aT1QEgoWAk=\");\n\n_c = Login;\n;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ashwin Jegatheesan/Gift-app/frontend/src/components/Login.js"],"names":["React","useState","Form","Button","Login","loginUserName","loginPassword","message","setMessage","doLogin","event","preventDefault","obj","login","value","password","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","firstName","Validated","user","email","Email","lastName","id","userName","UserName","localStorage","setItem","window","location","href","e","alert","toString","c"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction Login()\n{\n  var loginUserName;\n  var loginPassword;\n\n  const [message,setMessage] = useState('');\n\n  const doLogin = async event => \n    {\n        event.preventDefault();\n\n        var obj = {login:loginUserName.value,password:loginPassword.value};\n        var js = JSON.stringify(obj);\n\n        try\n        {    \n            const response = await fetch('http://localhost:3000/api/login',\n                {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n            var res = JSON.parse(await response.text());\n            if( res.firstName === \"\" )\n            {\n                setMessage('Username/Password combination incorrect');\n            }\n            else if(!res.Validated)\n            {\n                setMessage('Check your email to verify account');\n            }\n            else\n            {\n                var user = {email:res.Email,firstName:res.firstName,lastName:res.lastName,id:res.id,userName:res.UserName}\n                localStorage.setItem('user_data', JSON.stringify(user));\n                \n                setMessage('');\n                window.location.href = '/home';\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }    \n    };\n\n\n    return(\n    <div>  \n        <Form className=\"loginform\">\n            <h3 className=\"loginlabel\">\n                Log In\n            </h3>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control className=\"login-input\" type=\"name\" placeholder=\"username\" ref={(c) => loginUserName = c}/>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control className=\"login-input\" type=\"password\" placeholder=\"password\" ref={(c) => loginPassword = c}/>\n            </Form.Group>\n            <Button size=\"lg\" variant=\"primary\" type=\"submit\" onClick={doLogin} block>\n                Log in\n            </Button>\n            <div className=\"col text-center\">\n            <span id=\"loginResult\">{message}</span>\n            </div>\n            <hr></hr>\n            <div className=\"col text-center\">\n                <a href=\"/ForgotPassword\">Forgot Password?</a><br></br>\n                {/* <span className=\"divider\"></span> */}\n                <a href=\"/SignUp\" className=\"link\">Create an account</a>\n            </div>\n        </Form>\n    </div>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}